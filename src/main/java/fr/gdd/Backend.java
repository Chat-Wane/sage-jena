package fr.gdd;
 
import java.util.Iterator;
import org.apache.jena.atlas.lib.tuple.Tuple;



/**
 * Basic interface that a backend must implement to execute the code
 * generated by `sage-query-generator`.
 */
public interface Backend<ID, SKIP> {

    /**
     * Returns a preemptable iterator that enables scaning the triple pattern.
     * @param s The identifier of the subject.
     * @param p The identifier of the predicate.
     * @param o The identifier of the object.
     * @param c The identifier of the context, also known as graph.
     * @return A preemptable iterator.
     */
    public BackendIterator<ID, SKIP> searchIds(final ID s, final ID p, final ID o, final ID c);

    /**
     * @param subject The subject to look for.
     * @return The unique identifier of the subject in the database.
     */
    public ID getSubjectId(final String subject);
    
    /**
     * @param predicate The predicate to look for.
     * @return The unique identifier of the predicate in the database.
     */
    public ID getPredicateId(final String predicate);

    /**
     * @param object The object to look for.
     * @return The unique identifier of the object in the database.
     */
    public ID getObjectId(final String object);

    /**
     * @param context The object to look for.
     * @return The unique identifier of the context in the database.
     */
    public ID getContextId(final String context);
    
}
